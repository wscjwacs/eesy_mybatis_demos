<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flyz.dao.IUserDao">

    <!-- 定义User的resultMap-->
    <resultMap id="userMap" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
        <!-- 配置user对象中accounts集合的映射 -->
        <collection property="accounts" ofType="account">
            <id column="aid" property="id"></id>
            <result column="uid" property="uid"></result>
            <result column="money" property="money"></result>
        </collection>
    </resultMap>
    <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
    <!--<resultMap id="userMap" type="user">-->
        <!--&lt;!&ndash; 主键字段的对应 &ndash;&gt;-->
        <!--<id property="id" column="id"></id>-->
        <!--&lt;!&ndash;非主键字段的对应&ndash;&gt;-->
        <!--<result property="username" column="username"></result>-->
        <!--<result property="address" column="address"></result>-->
        <!--<result property="sex" column="sex"></result>-->
        <!--<result property="birthday" column="birthday"></result>-->
    <!--</resultMap>-->

    <!-- 了解的内容：抽取重复的sql语句-->
    <sql id="defaultUser">
        select * from user
    </sql>

   <!--  当实体类的字段和数据库字段不一致的时候
    <resultMap id="userMap" type="uSeR">
        <id property="userId" column="id"></id>
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap> -->





    <!--配置查询所有-->
    <!--id与对应接口的方法名相同-->
    <select id="findAll" resultMap="userMap">
--         select * from user;
       select * from user u left outer join account a on u.id = a.uid
    </select>
    <!--insert id="insert" parameterType="User">
        INSERT INTO mybatistest(id,username,birthday,sex,address) VALUES(#{id},#{username},#{birthday},#{sex},#{address})
    </insert-->
    <insert id="saveUser" parameterType="User">

        <selectKey keyProperty="id" keyColumn="id" resultType="int">
            SELECT LAST_INSERT_ID();
        </selectKey>
        INSERT INTO user(username, address, sex, birthday)VALUES(#{username}, #{address}, #{sex}, #{birthday});
    </insert>

    <insert id="updateUser" parameterType="com.flyz.domain.User">
        update  user set username = #{username},address= #{address}, sex = #{sex}, birthday = #{birthday} where  id=#{id};
    </insert>






    <!-- 删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{uid}
    </delete>

    <!-- 根据id查询用户 -->
    <select id="findById" parameterType="INT" resultMap="userMap">
        select * from user where id = #{uid}
    </select>

    <!-- 根据名称模糊查询 -->
    <select id="findByName" parameterType="string" resultMap="userMap">
        select * from user where username like #{name}
        <!-- select * from user where username like '%${value}%'-->
    </select>

    <!-- 获取用户的总记录条数 -->
    <select id="findTotal" resultType="int">
        select count(id) from user;
    </select>

    <!-- 根据queryVo的条件查询用户 -->
    <select id="findUserByVo" parameterType="com.flyz.domain.QueryVo" resultMap="userMap">
        select * from user where username like #{user.username}
    </select>




    <select id="findAllWithFy" parameterType="map" resultMap="userMap">
        select *
        from user
        limit #{pstart},#{psize}
    </select>


    <select id="findAllByNameWithFy" parameterType="map" resultMap="userMap">
        select *
        from user
        where username like #{pname}
        limit #{pstart},#{psize}
    </select>





    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        select * from user
        <where>
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
        </where>
    </select>



    <!-- 根据queryvo中的Id集合实现查询用户列表 -->
    <select id="findUserInIds" resultMap="userMap" parameterType="queryvo">
        <include refid="defaultUser"></include>
        <where>
            <if test="ids != null and ids.size()>0">
                <foreach collection="ids" open="and id in (" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>
</mapper>